-- Tablas sin dependencias
CREATE TABLE public.databasechangelog (
    id varchar(255) NOT NULL,
    author varchar(255) NOT NULL,
    filename varchar(255) NOT NULL,
    dateexecuted timestamp NOT NULL,
    orderexecuted int4 NOT NULL,
    exectype varchar(10) NOT NULL,
    md5sum varchar(35) NULL,
    description varchar(255) NULL,
    "comments" varchar(255) NULL,
    tag varchar(255) NULL,
    liquibase varchar(20) NULL,
    contexts varchar(255) NULL,
    labels varchar(255) NULL,
    deployment_id varchar(10) NULL
);

CREATE TABLE public.databasechangeloglock (
    id int4 NOT NULL,
    "locked" bool NOT NULL,
    lockgranted timestamp NULL,
    lockedby varchar(255) NULL,
    CONSTRAINT databasechangeloglock_pkey PRIMARY KEY (id)
);

-- Tablas b√°sicas
CREATE TABLE public.tc_attributes (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    description varchar(4000) NOT NULL,
    "type" varchar(128) NOT NULL,
    "attribute" varchar(128) NOT NULL,
    "expression" varchar(4000) NOT NULL,
    priority int4 DEFAULT 0 NOT NULL,
    CONSTRAINT tc_attributes_pkey PRIMARY KEY (id)
);

CREATE TABLE public.tc_calendars (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    "name" varchar(128) NOT NULL,
    "data" bytea NOT NULL,
    "attributes" varchar(4000) NOT NULL,
    CONSTRAINT tc_calendars_pkey PRIMARY KEY (id)
);

CREATE TABLE public.tc_commands (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    description varchar(4000) NOT NULL,
    "type" varchar(128) NOT NULL,
    textchannel bool DEFAULT false NOT NULL,
    "attributes" varchar(4000) NOT NULL,
    CONSTRAINT tc_commands_pkey PRIMARY KEY (id)
);

CREATE TABLE public.tc_drivers (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    "name" varchar(128) NOT NULL,
    uniqueid varchar(128) NOT NULL,
    "attributes" varchar(4000) NOT NULL,
    CONSTRAINT tc_drivers_pkey PRIMARY KEY (id),
    CONSTRAINT tc_drivers_uniqueid_key UNIQUE (uniqueid)
);

CREATE TABLE public.tc_geofences (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    "name" varchar(128) NOT NULL,
    description varchar(128) NULL,
    area varchar(4096) NOT NULL,
    "attributes" varchar(4000) NULL,
    calendarid int4 NULL,
    CONSTRAINT tc_geofences_pkey PRIMARY KEY (id),
    CONSTRAINT fk_geofence_calendar_calendarid FOREIGN KEY (calendarid) REFERENCES public.tc_calendars(id) ON DELETE SET NULL
);

CREATE TABLE public.tc_groups (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    "name" varchar(128) NOT NULL,
    groupid int4 NULL,
    "attributes" varchar(4000) NULL,
    CONSTRAINT tc_groups_pkey PRIMARY KEY (id),
    CONSTRAINT fk_groups_groupid FOREIGN KEY (groupid) REFERENCES public.tc_groups(id) ON DELETE SET NULL ON UPDATE RESTRICT
);

CREATE TABLE public.tc_maintenances (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    "name" varchar(4000) NOT NULL,
    "type" varchar(128) NOT NULL,
    "start" float8 DEFAULT 0 NOT NULL,
    "period" float8 DEFAULT 0 NOT NULL,
    "attributes" varchar(4000) NOT NULL,
    CONSTRAINT tc_maintenances_pkey PRIMARY KEY (id)
);

CREATE TABLE public.tc_notifications (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    "type" varchar(128) NOT NULL,
    "attributes" varchar(4000) NULL,
    "always" bool DEFAULT false NOT NULL,
    calendarid int4 NULL,
    notificators varchar(128) NULL,
    commandid int4 NULL,
    CONSTRAINT tc_notifications_pkey PRIMARY KEY (id),
    CONSTRAINT fk_notification_calendar_calendarid FOREIGN KEY (calendarid) REFERENCES public.tc_calendars(id) ON DELETE SET NULL ON UPDATE RESTRICT,
    CONSTRAINT fk_notifications_commandid FOREIGN KEY (commandid) REFERENCES public.tc_commands(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_orders (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    uniqueid varchar(128) NOT NULL,
    description varchar(512) NULL,
    fromaddress varchar(512) NULL,
    toaddress varchar(512) NULL,
    "attributes" varchar(4000) NOT NULL,
    CONSTRAINT tc_orders_pkey PRIMARY KEY (id)
);

CREATE TABLE public.tc_reports (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    "type" varchar(32) NOT NULL,
    description varchar(128) NOT NULL,
    calendarid int4 NOT NULL,
    "attributes" varchar(4000) NOT NULL,
    CONSTRAINT tc_reports_pkey PRIMARY KEY (id),
    CONSTRAINT fk_reports_calendarid FOREIGN KEY (calendarid) REFERENCES public.tc_calendars(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_servers (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    registration bool DEFAULT false NOT NULL,
    latitude float8 DEFAULT 0 NOT NULL,
    longitude float8 DEFAULT 0 NOT NULL,
    zoom int4 DEFAULT 0 NOT NULL,
    "map" varchar(128) NULL,
    bingkey varchar(128) NULL,
    mapurl varchar(512) NULL,
    readonly bool DEFAULT false NOT NULL,
    "attributes" varchar(4000) NULL,
    forcesettings bool DEFAULT false NOT NULL,
    coordinateformat varchar(128) NULL,
    devicereadonly bool DEFAULT false NULL,
    limitcommands bool DEFAULT false NULL,
    poilayer varchar(512) NULL,
    announcement varchar(4000) NULL,
    disablereports bool DEFAULT false NULL,
    overlayurl varchar(512) NULL,
    fixedemail bool DEFAULT false NULL,
    CONSTRAINT tc_servers_pkey PRIMARY KEY (id)
);

CREATE TABLE public.tc_statistics (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    capturetime timestamp NOT NULL,
    activeusers int4 DEFAULT 0 NOT NULL,
    activedevices int4 DEFAULT 0 NOT NULL,
    requests int4 DEFAULT 0 NOT NULL,
    messagesreceived int4 DEFAULT 0 NOT NULL,
    messagesstored int4 DEFAULT 0 NOT NULL,
    "attributes" varchar(4096) NOT NULL,
    mailsent int4 DEFAULT 0 NOT NULL,
    smssent int4 DEFAULT 0 NOT NULL,
    geocoderrequests int4 DEFAULT 0 NOT NULL,
    geolocationrequests int4 DEFAULT 0 NOT NULL,
    protocols varchar(4096) NULL,
    CONSTRAINT tc_statistics_pkey PRIMARY KEY (id)
);

CREATE TABLE public.tc_users (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    "name" varchar(128) NOT NULL,
    email varchar(128) NOT NULL,
    hashedpassword varchar(128) NULL,
    salt varchar(128) NULL,
    readonly bool DEFAULT false NOT NULL,
    administrator bool NULL,
    "map" varchar(128) NULL,
    latitude float8 DEFAULT 0 NOT NULL,
    longitude float8 DEFAULT 0 NOT NULL,
    zoom int4 DEFAULT 0 NOT NULL,
    "attributes" varchar(4000) NULL,
    coordinateformat varchar(128) NULL,
    disabled bool DEFAULT false NULL,
    expirationtime timestamp NULL,
    devicelimit int4 DEFAULT '-1'::integer NULL,
    userlimit int4 DEFAULT 0 NULL,
    devicereadonly bool DEFAULT false NULL,
    phone varchar(128) NULL,
    limitcommands bool DEFAULT false NULL,
    login varchar(128) NULL,
    poilayer varchar(512) NULL,
    disablereports bool DEFAULT false NULL,
    fixedemail bool DEFAULT false NULL,
    totpkey varchar(64) NULL,
    "temporary" bool DEFAULT false NULL,
    CONSTRAINT tc_users_email_key UNIQUE (email),
    CONSTRAINT tc_users_pkey PRIMARY KEY (id)
);

CREATE INDEX idx_users_email ON public.tc_users USING btree (email);
CREATE INDEX idx_users_login ON public.tc_users USING btree (login);

-- Tablas dependientes
CREATE TABLE public.tc_devices (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    "name" varchar(128) NOT NULL,
    uniqueid varchar(128) NOT NULL,
    lastupdate timestamp NULL,
    positionid int4 NULL,
    groupid int4 NULL,
    "attributes" varchar(4000) NULL,
    phone varchar(128) NULL,
    model varchar(128) NULL,
    contact varchar(512) NULL,
    category varchar(128) NULL,
    disabled bool DEFAULT false NULL,
    status bpchar(8) NULL,
    expirationtime timestamp NULL,
    motionstate bool DEFAULT false NULL,
    motiontime timestamp NULL,
    motiondistance float8 DEFAULT 0 NULL,
    overspeedstate bool DEFAULT false NULL,
    overspeedtime timestamp NULL,
    overspeedgeofenceid int4 DEFAULT 0 NULL,
    motionstreak bool DEFAULT false NULL,
    calendarid int4 NULL,
    CONSTRAINT tc_devices_pkey PRIMARY KEY (id),
    CONSTRAINT tc_devices_uniqueid_key UNIQUE (uniqueid),
    CONSTRAINT fk_devices_calendarid FOREIGN KEY (calendarid) REFERENCES public.tc_calendars(id) ON DELETE SET NULL ON UPDATE RESTRICT,
    CONSTRAINT fk_devices_groupid FOREIGN KEY (groupid) REFERENCES public.tc_groups(id) ON DELETE SET NULL
);

CREATE INDEX idx_devices_uniqueid ON public.tc_devices USING btree (uniqueid);

CREATE TABLE public.tc_events (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    "type" varchar(128) NOT NULL,
    eventtime timestamp NOT NULL,
    deviceid int4 NULL,
    positionid int4 NULL,
    geofenceid int4 NULL,
    "attributes" varchar(4000) NULL,
    maintenanceid int4 NULL,
    CONSTRAINT tc_events_pkey PRIMARY KEY (id)
);

CREATE INDEX event_deviceid_servertime ON public.tc_events USING btree (deviceid, eventtime);

CREATE TABLE public.tc_positions (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    protocol varchar(128) NULL,
    deviceid int4 NOT NULL,
    servertime timestamp DEFAULT now() NOT NULL,
    devicetime timestamp NOT NULL,
    fixtime timestamp NOT NULL,
    "valid" bool NOT NULL,
    latitude float8 NOT NULL,
    longitude float8 NOT NULL,
    altitude float8 NOT NULL,
    speed float8 NOT NULL,
    course float8 NOT NULL,
    address varchar(512) NULL,
    "attributes" varchar(4000) NULL,
    accuracy float8 DEFAULT 0 NOT NULL,
    network varchar(4000) NULL,
    geofenceids varchar(128) NULL,
    CONSTRAINT tc_positions_pkey PRIMARY KEY (id)
);

CREATE INDEX position_deviceid_fixtime ON public.tc_positions USING btree (deviceid, fixtime);

-- Tablas de relaciones
CREATE TABLE public.tc_commands_queue (
    id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
    deviceid int4 NOT NULL,
    "type" varchar(128) NOT NULL,
    textchannel bool DEFAULT false NOT NULL,
    "attributes" varchar(4000) NOT NULL,
    CONSTRAINT tc_commands_queue_pkey PRIMARY KEY (id),
    CONSTRAINT fk_commands_queue_deviceid FOREIGN KEY (deviceid) REFERENCES public.tc_devices(id) ON DELETE CASCADE
);

CREATE INDEX idx_commands_queue_deviceid ON public.tc_commands_queue USING btree (deviceid);

CREATE TABLE public.tc_device_attribute (
    deviceid int4 NOT NULL,
    attributeid int4 NOT NULL,
    CONSTRAINT fk_user_device_attribute_attributeid FOREIGN KEY (attributeid) REFERENCES public.tc_attributes(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_device_attribute_deviceid FOREIGN KEY (deviceid) REFERENCES public.tc_devices(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_device_command (
    deviceid int4 NOT NULL,
    commandid int4 NOT NULL,
    CONSTRAINT fk_device_command_commandid FOREIGN KEY (commandid) REFERENCES public.tc_commands(id) ON DELETE CASCADE,
    CONSTRAINT fk_device_command_deviceid FOREIGN KEY (deviceid) REFERENCES public.tc_devices(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_device_driver (
    deviceid int4 NOT NULL,
    driverid int4 NOT NULL,
    CONSTRAINT fk_device_driver_deviceid FOREIGN KEY (deviceid) REFERENCES public.tc_devices(id) ON DELETE CASCADE,
    CONSTRAINT fk_device_driver_driverid FOREIGN KEY (driverid) REFERENCES public.tc_drivers(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_device_geofence (
    deviceid int4 NOT NULL,
    geofenceid int4 NOT NULL,
    CONSTRAINT fk_device_geofence_deviceid FOREIGN KEY (deviceid) REFERENCES public.tc_devices(id) ON DELETE CASCADE,
    CONSTRAINT fk_device_geofence_geofenceid FOREIGN KEY (geofenceid) REFERENCES public.tc_geofences(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_device_maintenance (
    deviceid int4 NOT NULL,
    maintenanceid int4 NOT NULL,
    CONSTRAINT fk_device_maintenance_deviceid FOREIGN KEY (deviceid) REFERENCES public.tc_devices(id) ON DELETE CASCADE,
    CONSTRAINT fk_device_maintenance_maintenanceid FOREIGN KEY (maintenanceid) REFERENCES public.tc_maintenances(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_device_notification (
    deviceid int4 NOT NULL,
    notificationid int4 NOT NULL,
    CONSTRAINT fk_device_notification_deviceid FOREIGN KEY (deviceid) REFERENCES public.tc_devices(id) ON DELETE CASCADE,
    CONSTRAINT fk_device_notification_notificationid FOREIGN KEY (notificationid) REFERENCES public.tc_notifications(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_device_order (
    deviceid int4 NOT NULL,
    orderid int4 NOT NULL,
    CONSTRAINT fk_device_order_deviceid FOREIGN KEY (deviceid) REFERENCES public.tc_devices(id) ON DELETE CASCADE,
    CONSTRAINT fk_device_order_orderid FOREIGN KEY (orderid) REFERENCES public.tc_orders(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_device_report (
    deviceid int4 NOT NULL,
    reportid int4 NOT NULL,
    CONSTRAINT fk_device_report_deviceid FOREIGN KEY (deviceid) REFERENCES public.tc_devices(id) ON DELETE CASCADE,
    CONSTRAINT fk_device_report_reportid FOREIGN KEY (reportid) REFERENCES public.tc_reports(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_group_attribute (
    groupid int4 NOT NULL,
    attributeid int4 NOT NULL,
    CONSTRAINT fk_group_attribute_attributeid FOREIGN KEY (attributeid) REFERENCES public.tc_attributes(id) ON DELETE CASCADE,
    CONSTRAINT fk_group_attribute_groupid FOREIGN KEY (groupid) REFERENCES public.tc_groups(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_group_command (
    groupid int4 NOT NULL,
    commandid int4 NOT NULL,
    CONSTRAINT fk_group_command_commandid FOREIGN KEY (commandid) REFERENCES public.tc_commands(id) ON DELETE CASCADE,
    CONSTRAINT fk_group_command_groupid FOREIGN KEY (groupid) REFERENCES public.tc_groups(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_group_driver (
    groupid int4 NOT NULL,
    driverid int4 NOT NULL,
    CONSTRAINT fk_group_driver_driverid FOREIGN KEY (driverid) REFERENCES public.tc_drivers(id) ON DELETE CASCADE,
    CONSTRAINT fk_group_driver_groupid FOREIGN KEY (groupid) REFERENCES public.tc_groups(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_group_geofence (
    groupid int4 NOT NULL,
    geofenceid int4 NOT NULL,
    CONSTRAINT fk_group_geofence_geofenceid FOREIGN KEY (geofenceid) REFERENCES public.tc_geofences(id) ON DELETE CASCADE,
    CONSTRAINT fk_group_geofence_groupid FOREIGN KEY (groupid) REFERENCES public.tc_groups(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_group_maintenance (
    groupid int4 NOT NULL,
    maintenanceid int4 NOT NULL,
    CONSTRAINT fk_group_maintenance_groupid FOREIGN KEY (groupid) REFERENCES public.tc_groups(id) ON DELETE CASCADE,
    CONSTRAINT fk_group_maintenance_maintenanceid FOREIGN KEY (maintenanceid) REFERENCES public.tc_maintenances(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_group_notification (
    groupid int4 NOT NULL,
    notificationid int4 NOT NULL,
    CONSTRAINT fk_group_notification_groupid FOREIGN KEY (groupid) REFERENCES public.tc_groups(id) ON DELETE CASCADE,
    CONSTRAINT fk_group_notification_notificationid FOREIGN KEY (notificationid) REFERENCES public.tc_notifications(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_group_order (
    groupid int4 NOT NULL,
    orderid int4 NOT NULL,
    CONSTRAINT fk_group_order_groupid FOREIGN KEY (groupid) REFERENCES public.tc_groups(id) ON DELETE CASCADE,
    CONSTRAINT fk_group_order_orderid FOREIGN KEY (orderid) REFERENCES public.tc_orders(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_group_report (
    groupid int4 NOT NULL,
    reportid int4 NOT NULL,
    CONSTRAINT fk_group_report_groupid FOREIGN KEY (groupid) REFERENCES public.tc_groups(id) ON DELETE CASCADE,
    CONSTRAINT fk_group_report_reportid FOREIGN KEY (reportid) REFERENCES public.tc_reports(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_user_attribute (
    userid int4 NOT NULL,
    attributeid int4 NOT NULL,
    CONSTRAINT fk_user_attribute_attributeid FOREIGN KEY (attributeid) REFERENCES public.tc_attributes(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_attribute_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_user_calendar (
    userid int4 NOT NULL,
    calendarid int4 NOT NULL,
    CONSTRAINT fk_user_calendar_calendarid FOREIGN KEY (calendarid) REFERENCES public.tc_calendars(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_calendar_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_user_command (
    userid int4 NOT NULL,
    commandid int4 NOT NULL,
    CONSTRAINT fk_user_command_commandid FOREIGN KEY (commandid) REFERENCES public.tc_commands(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_command_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_user_device (
    userid int4 NOT NULL,
    deviceid int4 NOT NULL,
    CONSTRAINT fk_user_device_deviceid FOREIGN KEY (deviceid) REFERENCES public.tc_devices(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_device_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);

CREATE INDEX user_device_user_id ON public.tc_user_device USING btree (userid);

CREATE TABLE public.tc_user_driver (
    userid int4 NOT NULL,
    driverid int4 NOT NULL,
    CONSTRAINT fk_user_driver_driverid FOREIGN KEY (driverid) REFERENCES public.tc_drivers(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_driver_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_user_geofence (
    userid int4 NOT NULL,
    geofenceid int4 NOT NULL,
    CONSTRAINT fk_user_geofence_geofenceid FOREIGN KEY (geofenceid) REFERENCES public.tc_geofences(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_geofence_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_user_group (
    userid int4 NOT NULL,
    groupid int4 NOT NULL,
    CONSTRAINT fk_user_group_groupid FOREIGN KEY (groupid) REFERENCES public.tc_groups(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_group_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_user_maintenance (
    userid int4 NOT NULL,
    maintenanceid int4 NOT NULL,
    CONSTRAINT fk_user_maintenance_maintenanceid FOREIGN KEY (maintenanceid) REFERENCES public.tc_maintenances(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_maintenance_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_user_notification (
    userid int4 NOT NULL,
    notificationid int4 NOT NULL,
    CONSTRAINT fk_user_notification_notificationid FOREIGN KEY (notificationid) REFERENCES public.tc_notifications(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_notification_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_user_order (
    userid int4 NOT NULL,
    orderid int4 NOT NULL,
    CONSTRAINT fk_user_order_orderid FOREIGN KEY (orderid) REFERENCES public.tc_orders(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_order_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_user_report (
    userid int4 NOT NULL,
    reportid int4 NOT NULL,
    CONSTRAINT fk_user_report_reportid FOREIGN KEY (reportid) REFERENCES public.tc_reports(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_report_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);

CREATE TABLE public.tc_user_user (
    userid int4 NOT NULL,
    manageduserid int4 NOT NULL,
    CONSTRAINT fk_user_user_manageduserid FOREIGN KEY (manageduserid) REFERENCES public.tc_users(id) ON DELETE CASCADE,
    CONSTRAINT fk_user_user_userid FOREIGN KEY (userid) REFERENCES public.tc_users(id) ON DELETE CASCADE
);
